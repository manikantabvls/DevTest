A .spec file is typically used in RPM packaging, but if you're looking to create a YAML-based configuration file for a similar purpose, here's an example of how you might structure it. This YAML file could represent metadata and build instructions for a software package:

Copy the code
package:
  name: my-software
  version: 1.0.0
  release: 1
  summary: A brief description of the software
  license: MIT
  url: https://example.com/my-software
  source: https://example.com/my-software-1.0.0.tar.gz

build:
  requires:
    - gcc
    - make
    - python3
  steps:
    - ./configure --prefix=/usr
    - make
    - make install DESTDIR=%{buildroot}

files:
  - /usr/bin/my-software
  - /usr/share/doc/my-software/README.md
  - /usr/share/licenses/my-software/LICENSE

changelog:
  - version: 1.0.0
    release: 1
    date: 2025-06-25
    changes:
      - Initial release of the software

Explanation:
package: Contains metadata about the software, such as its name, version, license, and source URL.
build: Specifies build dependencies and steps to compile and install the software.
files: Lists the files to be included in the package.
changelog: Tracks changes made in each version.

This YAML structure is not a direct replacement for an RPM .spec file but can be adapted for custom build systems or tools that support YAML configurations. Let me know if you'd like further customization!
